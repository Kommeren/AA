/*! \page sjoipm Scheduling Jobs on Identical Parallel Machines

\section def Problem definition.
In scheduling jobs on identical parallel machines we have M identical machines and N jobs to be processed.
Each job must be processed on one of these machines for \f$p_{j}\f$ time units without interruption, and each job is available for processing at time 0.
The aim is to complete all jobs as soon as possible.

\section Solution

Scheduling Jobs on Identical Parallel Machines problem is solved by greedy algorithm.
We sort all jobs from longest to shortest.
And we assign longest not assigned job to machine which has smallest load, until all jobs as assigned.

  example: 
\snippet scheduling_jobs_on_identical_parallel_machines_example.cpp Scheduling Jobs Example
 
  complete example is scheduling_jobs_on_identical_parallel_machines_example.cpp

\subsection app_sjoipm Approximation Ratio equals 4/3.

\subsection com_sjoipm The complexity
Complexity of the algorithm is \f$O(|N|*|log(N)|)\f$ where \a N is size of input

\subsection References

The algorithm analysis is described in \cite Williamson:2011:DAA:1971947


*/
